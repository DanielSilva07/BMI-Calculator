version: '3.9'

networks:
  u-online:
    driver: bridge

volumes:
  postgres-data:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - u-online
    healthcheck:
      test: ["CMD-SHELL", "echo srvr | nc localhost 2181 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
      image: confluentinc/cp-kafka:latest
      container_name: kafka
      hostname: kafka
      depends_on:
        zookeeper:
          condition: service_healthy
      ports:
        - "9092:9092"
        - "29092:29092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
        KAFKA_MESSAGE_MAX_BYTES: 10485760  # 10MB
        KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760  # 10MB
        KAFKA_MAX_REQUEST_SIZE: 10485760  # 10MB
        KAFKA_SOCKET_REQUEST_MAX_BYTES: 10485760  # 10MB
      healthcheck:
        test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 20s
      networks:
        - u-online

  imc-db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
       - ./env/imc-db.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - u-online

  imc:
    build:
      context: .
    image: daniel00dev/bmi:latest
    restart: unless-stopped
    container_name: imc
    env_file:
      - ./env/imc-app.env
    ports:
      - "9000:9000"
    depends_on:
      kafka:
        condition: service_healthy
      imc-db:
        condition: service_healthy
    networks:
      - u-online

  redis:
    image: redis:7.2.4
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    networks:
      - u-online

